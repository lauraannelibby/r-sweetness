#' ### **Important:** Set number of iterations
#' Troubleshooting? Set a minimum of 50. Running for real? At least 1000, or even better 10,000.
niters=10000
#' ### Load packages
suppressMessages(require(car))
suppressMessages(require(gtools))
suppressMessages(require(ggplot2))
suppressMessages(require(lme4))
#' ### Input data
datafilename="C:/Users/Laura Libby/Dropbox/CogCon/meansim_ROIs_factors.txt"
data=read.table(datafilename,header=T)
#' ### Make sure data are formatted correctly
summary(data)
#' ## Data manipulation
hipphead <- subset(data, ROI=="Hipp_Head")
hipphead$ROI <- factor(hipphead$ROI)
#' ### Create dummy variables for additive and conjunctive coding
hipphead$conjunctive <- recode(hipphead$Sort, "'bothdiff'=-1 ; 'consame'=-1 ; 'objconsame'=3 ; 'objsame'=-1"
, as.factor.result=FALSE, as.numeric.result=TRUE)
hipphead$additive <- recode(hipphead$Sort, "'bothdiff'=-1 ; 'consame'=0 ; 'objconsame'=1 ; 'objsame'=0",
, as.factor.result=FALSE, as.numeric.result=TRUE)
summary(hipphead)
#' ### Conjunctive coding model
model.conjunctive.hem <- function(x) {
lmer(Sim ~ conjunctive*Hem + (1|Subj/Hem), REML=FALSE, data=x)
}
#' ### Additive coding model
model.additive.hem <- function(x) {
lmer(Sim ~ additive*Hem + (1|Subj/Hem), REML=FALSE, data=x)
}
#' ### Define model comparison function
#' (Note: Lower AIC and BIC is better)
getbic <- function(x) {
compare <- anova(model.conjunctive.hem(x), model.additive.hem(x))
return(compare$BIC)
}
#' ### Generate `r niters` unique combinations of subjects with replacement
set.seed(1) # For replication
N <- t(replicate(15000, sample(levels(hipphead$Subj),replace=TRUE)))
sum(duplicated(N))
order <- N[!(duplicated(N)), ][1:niters, ]
#' Take a sneak peek at the first 10 "samples"
head(order)
dims(order)
dim(order)
?head
head(order, n=10L)
q()
